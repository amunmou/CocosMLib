{
  "ver": "1.0.27",
  "uuid": "4449f861-ee05-4f02-843e-09e95f767076",
  "importer": "effect",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\n#if USE_TEXTURE\n    attribute vec2 a_uv0;\n    varying vec2 v_uv0;\n#endif\nattribute vec4 a_color;\nvarying vec4 v_color;\nvoid main () {\n    mat4 mvp;\n    #if CC_USE_MODEL\n        mvp = cc_matViewProj * cc_matWorld;\n    #else\n        mvp = cc_matViewProj;\n    #endif\n    #if USE_TEXTURE\n        v_uv0 = a_uv0;\n    #endif\n    #if USE_TINT\n    #endif\n    v_color = a_color;\n    gl_Position = mvp * vec4(a_position, 1);\n}",
        "frag": "\n  precision highp float;\n  #if USE_TEXTURE\n      varying vec2 v_uv0;\n      uniform sampler2D texture;\n  #endif\n  varying vec4 v_color;\n  uniform vec2 uSize;\nuniform float uIntensity;\nuniform float uBrightness;\nuniform sampler2D uTex;\n  vec3 screen(vec3 s, vec3 d)\n{\n    return s + d - s * d;\n}\nfloat overlayf(float s, float d)\n{\n    return (d < 0.5) ? 2.0 * s * d : 1.0 - 2.0 * (1.0 - s) * (1.0 - d);\n}\nvec3 overlay(vec3 s, vec3 d)\n{\n    vec3 c;\n    c.x = overlayf(s.x, d.x);\n    c.y = overlayf(s.y, d.y);\n    c.z = overlayf(s.z, d.z);\n    return c;\n}\nvec3 sample(sampler2D tex, vec2 sc, vec2 size, const int x, const int y)\n{\n    sc = (sc.xy + vec2(x, y)) ;\n    return texture2D(tex, sc).xyz;\n}\nvec4 OilPaint_main(sampler2D Tex, vec2 UV, vec2 Size, float Intensity, float Brightness)\n{\n    vec2 step = vec2 (1.0 / Size);\n    float n = float((5.92 + 1.0) * (5.92 + 1.0)) * Intensity;\n    int i;\n    int j;\n    vec3 m0 = vec3(0.0);\n    vec3 m1 = vec3(0.0);\n    vec3 m2 = vec3(0.0);\n    vec3 m3 = vec3(0.0);\n    vec3 s0 = vec3(0.0);\n    vec3 s1 = vec3(0.0);\n    vec3 s2 = vec3(0.0);\n    vec3 s3 = vec3(0.0);\n    vec3 c;\n    for (float j = -5.92; j <= 0.0; ++j)\n    {\n        for (float i = -5.92; i <= 0.0; ++i)\n        {\n            c = texture2D(Tex, UV + vec2(i,j) * step).rgb;\n            m0 += c;\n            s0 += c * c;\n        }\n    }\n    for (float j = -5.92; j <= 0.0; ++j)\n    {\n        for (float i = 0.0; i <= 5.92; ++i)\n        {\n            c = texture2D(Tex, UV + vec2(i,j) * step).rgb;\n            m1 += c;\n            s1 += c * c;\n        }\n    }\n    for (float j = 0.0; j <= 5.92; ++j)\n    {\n        for (float i = 0.0; i <= 5.92; ++i)\n        {\n            c = texture2D(Tex, UV + vec2(i,j) * step).rgb;\n            m2 += c;\n            s2 += c * c;\n        }\n    }\n    for (float j = 0.0; j <= 5.92; ++j)\n    {\n        for (float i = -5.92; i <= 0.0; ++i)\n        {\n            c = texture2D(Tex, UV + vec2(i,j) * step).rgb;\n            m3 += c;\n            s3 += c * c;\n        }\n    }\n    vec4 result;\n    float min_sigma2 = 1e+2;\n    m0 /= n;\n    s0 = abs(s0 / n - m0 * m0);\n    float sigma2 = s0.r + s0.g + s0.b;\n    if (sigma2 < min_sigma2)\n    {\n        min_sigma2 = sigma2;\n        result = vec4(m0, 1.0);\n    }\n    m1 /= n;\n    s1 = abs(s1 / n - m1 * m1);\n    sigma2 = s1.r + s1.g + s1.b;\n    if (sigma2 < min_sigma2)\n    {\n        min_sigma2 = sigma2;\n        result = vec4(m1, 1.0);\n    }\n    m2 /= n;\n    s2 = abs(s2 / n - m2 * m2);\n    sigma2 = s2.r + s2.g + s2.b;\n    if (sigma2 < min_sigma2)\n    {\n        min_sigma2 = sigma2;\n        result = vec4(m2, 1.0);\n    }\n    m3 /= n;\n    s3 = abs(s3 / n - m3 * m3);\n    sigma2 = s3.r + s3.g + s3.b;\n    if (sigma2 < min_sigma2)\n    {\n        min_sigma2 = sigma2;\n        result = vec4(m3, 1.0);\n    }\n    vec3 hc = sample(Tex, UV.xy, Size, -1, -1) * 1.0 + sample(Tex, UV.xy, Size, 0, -1) * 2.0 + sample(Tex, UV.xy, Size, 1,-1) * 1.0 + sample(Tex, UV.xy, Size, -1, 1) * -1.0 + sample(Tex, UV.xy, Size, 0, 1) * -2.0 + sample(Tex, UV.xy, Size, 1, 1) * -1.0;\n    vec3 vc = sample(Tex, UV.xy, Size, -1, -1) * 1.0 + sample(Tex, UV.xy, Size, -1, 0) * 2.0 + sample(Tex, UV.xy, Size, -1, 1) * 1.0 + sample(Tex, UV.xy, Size, 1, -1) * -1.0 + sample(Tex, UV.xy, Size, 1, 0) * -2.0 + sample(Tex, UV.xy, Size, 1, 1) * -1.0;\n    vec3 c2 = sample(Tex, UV.xy, Size, 0, 0);\n    return vec4(overlay(screen(result.rgb,c2.rgb), result.rgb), texture2D(Tex, UV).a) * Brightness;\n}\nvoid main () {\n    gl_FragColor = OilPaint_main(texture, v_uv0, uSize, uIntensity, uBrightness);\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\n#if USE_TEXTURE\n    in vec2 a_uv0;\n    out vec2 v_uv0;\n#endif\nin vec4 a_color;\nout vec4 v_color;\nvoid main () {\n    mat4 mvp;\n    #if CC_USE_MODEL\n        mvp = cc_matViewProj * cc_matWorld;\n    #else\n        mvp = cc_matViewProj;\n    #endif\n    #if USE_TEXTURE\n        v_uv0 = a_uv0;\n    #endif\n    #if USE_TINT\n    #endif\n    v_color = a_color;\n    gl_Position = mvp * vec4(a_position, 1);\n}",
        "frag": "\n  precision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\n  #if USE_TEXTURE\n      in vec2 v_uv0;\n      uniform sampler2D texture;\n  #endif\n  in vec4 v_color;\n  uniform Constant {\n  vec2 uSize;\n  float uIntensity;\n  float uBrightness;\n};\nuniform sampler2D uTex;\n  vec3 screen(vec3 s, vec3 d)\n{\n    return s + d - s * d;\n}\nfloat overlayf(float s, float d)\n{\n    return (d < 0.5) ? 2.0 * s * d : 1.0 - 2.0 * (1.0 - s) * (1.0 - d);\n}\nvec3 overlay(vec3 s, vec3 d)\n{\n    vec3 c;\n    c.x = overlayf(s.x, d.x);\n    c.y = overlayf(s.y, d.y);\n    c.z = overlayf(s.z, d.z);\n    return c;\n}\nvec3 sample(sampler2D tex, vec2 sc, vec2 size, const int x, const int y)\n{\n    sc = (sc.xy + vec2(x, y)) ;\n    return texture2D(tex, sc).xyz;\n}\nvec4 OilPaint_main(sampler2D Tex, vec2 UV, vec2 Size, float Intensity, float Brightness)\n{\n    vec2 step = vec2 (1.0 / Size);\n    float n = float((5.92 + 1.0) * (5.92 + 1.0)) * Intensity;\n    int i;\n    int j;\n    vec3 m0 = vec3(0.0);\n    vec3 m1 = vec3(0.0);\n    vec3 m2 = vec3(0.0);\n    vec3 m3 = vec3(0.0);\n    vec3 s0 = vec3(0.0);\n    vec3 s1 = vec3(0.0);\n    vec3 s2 = vec3(0.0);\n    vec3 s3 = vec3(0.0);\n    vec3 c;\n    for (float j = -5.92; j <= 0.0; ++j)\n    {\n        for (float i = -5.92; i <= 0.0; ++i)\n        {\n            c = texture2D(Tex, UV + vec2(i,j) * step).rgb;\n            m0 += c;\n            s0 += c * c;\n        }\n    }\n    for (float j = -5.92; j <= 0.0; ++j)\n    {\n        for (float i = 0.0; i <= 5.92; ++i)\n        {\n            c = texture2D(Tex, UV + vec2(i,j) * step).rgb;\n            m1 += c;\n            s1 += c * c;\n        }\n    }\n    for (float j = 0.0; j <= 5.92; ++j)\n    {\n        for (float i = 0.0; i <= 5.92; ++i)\n        {\n            c = texture2D(Tex, UV + vec2(i,j) * step).rgb;\n            m2 += c;\n            s2 += c * c;\n        }\n    }\n    for (float j = 0.0; j <= 5.92; ++j)\n    {\n        for (float i = -5.92; i <= 0.0; ++i)\n        {\n            c = texture2D(Tex, UV + vec2(i,j) * step).rgb;\n            m3 += c;\n            s3 += c * c;\n        }\n    }\n    vec4 result;\n    float min_sigma2 = 1e+2;\n    m0 /= n;\n    s0 = abs(s0 / n - m0 * m0);\n    float sigma2 = s0.r + s0.g + s0.b;\n    if (sigma2 < min_sigma2)\n    {\n        min_sigma2 = sigma2;\n        result = vec4(m0, 1.0);\n    }\n    m1 /= n;\n    s1 = abs(s1 / n - m1 * m1);\n    sigma2 = s1.r + s1.g + s1.b;\n    if (sigma2 < min_sigma2)\n    {\n        min_sigma2 = sigma2;\n        result = vec4(m1, 1.0);\n    }\n    m2 /= n;\n    s2 = abs(s2 / n - m2 * m2);\n    sigma2 = s2.r + s2.g + s2.b;\n    if (sigma2 < min_sigma2)\n    {\n        min_sigma2 = sigma2;\n        result = vec4(m2, 1.0);\n    }\n    m3 /= n;\n    s3 = abs(s3 / n - m3 * m3);\n    sigma2 = s3.r + s3.g + s3.b;\n    if (sigma2 < min_sigma2)\n    {\n        min_sigma2 = sigma2;\n        result = vec4(m3, 1.0);\n    }\n    vec3 hc = sample(Tex, UV.xy, Size, -1, -1) * 1.0 + sample(Tex, UV.xy, Size, 0, -1) * 2.0 + sample(Tex, UV.xy, Size, 1,-1) * 1.0 + sample(Tex, UV.xy, Size, -1, 1) * -1.0 + sample(Tex, UV.xy, Size, 0, 1) * -2.0 + sample(Tex, UV.xy, Size, 1, 1) * -1.0;\n    vec3 vc = sample(Tex, UV.xy, Size, -1, -1) * 1.0 + sample(Tex, UV.xy, Size, -1, 0) * 2.0 + sample(Tex, UV.xy, Size, -1, 1) * 1.0 + sample(Tex, UV.xy, Size, 1, -1) * -1.0 + sample(Tex, UV.xy, Size, 1, 0) * -2.0 + sample(Tex, UV.xy, Size, 1, 1) * -1.0;\n    vec3 c2 = sample(Tex, UV.xy, Size, 0, 0);\n    return vec4(overlay(screen(result.rgb,c2.rgb), result.rgb), texture2D(Tex, UV).a) * Brightness;\n}\nvoid main () {\n    gl_FragColor = OilPaint_main(texture, v_uv0, uSize, uIntensity, uBrightness);\n}"
      }
    }
  ],
  "subMetas": {}
}