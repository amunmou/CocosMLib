{
  "ver": "1.0.27",
  "uuid": "e4211e6d-40a6-46bc-ab97-4fc60cc1735c",
  "importer": "effect",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\n#if USE_TEXTURE\n    attribute vec2 a_uv0;\n    varying vec2 v_uv0;\n#endif\nattribute vec4 a_color;\nvarying vec4 v_color;\nvoid main () {\n    mat4 mvp;\n    #if CC_USE_MODEL\n        mvp = cc_matViewProj * cc_matWorld;\n    #else\n        mvp = cc_matViewProj;\n    #endif\n    #if USE_TEXTURE\n        v_uv0 = a_uv0;\n    #endif\n    #if USE_TINT\n    #endif\n    v_color = a_color;\n    gl_Position = mvp * vec4(a_position, 1);\n}",
        "frag": "\n  precision highp float;\n  #if USE_TEXTURE\n      varying vec2 v_uv0;\n      uniform sampler2D texture;\n  #endif\n  varying vec4 v_color;\n  uniform vec4 uFogColor;\nuniform vec2 uCenter;\nuniform float uInensity;\nuniform sampler2D uTex;\nvec4 CircularFog_main(sampler2D Tex, vec2 UV, vec2 Center, float Inensity, vec4 FogColor)\n{\n    vec4 texColor = texture2D(Tex, UV);\n    float distance = distance(Center, UV);\n    float factor = exp(-abs(distance * Inensity));\n    if (texColor.a > 0.5) {\n        return mix(vec4(FogColor.rgb, texColor.a), texColor, factor);\n    }\n    else {\n        return texColor;\n    }\n}\nvoid main () {\n    gl_FragColor = CircularFog_main(texture, v_uv0, uCenter, uInensity, uFogColor);\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\n#if USE_TEXTURE\n    in vec2 a_uv0;\n    out vec2 v_uv0;\n#endif\nin vec4 a_color;\nout vec4 v_color;\nvoid main () {\n    mat4 mvp;\n    #if CC_USE_MODEL\n        mvp = cc_matViewProj * cc_matWorld;\n    #else\n        mvp = cc_matViewProj;\n    #endif\n    #if USE_TEXTURE\n        v_uv0 = a_uv0;\n    #endif\n    #if USE_TINT\n    #endif\n    v_color = a_color;\n    gl_Position = mvp * vec4(a_position, 1);\n}",
        "frag": "\n  precision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\n  #if USE_TEXTURE\n      in vec2 v_uv0;\n      uniform sampler2D texture;\n  #endif\n  in vec4 v_color;\n  uniform Constant {\n  vec4 uFogColor;\n  vec2 uCenter;\n  float uInensity;\n};\nuniform sampler2D uTex;\nvec4 CircularFog_main(sampler2D Tex, vec2 UV, vec2 Center, float Inensity, vec4 FogColor)\n{\n    vec4 texColor = texture2D(Tex, UV);\n    float distance = distance(Center, UV);\n    float factor = exp(-abs(distance * Inensity));\n    if (texColor.a > 0.5) {\n        return mix(vec4(FogColor.rgb, texColor.a), texColor, factor);\n    }\n    else {\n        return texColor;\n    }\n}\nvoid main () {\n    gl_FragColor = CircularFog_main(texture, v_uv0, uCenter, uInensity, uFogColor);\n}"
      }
    }
  ],
  "subMetas": {}
}