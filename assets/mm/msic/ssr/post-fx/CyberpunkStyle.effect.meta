{
  "ver": "1.0.27",
  "uuid": "003aa2d3-1850-44dd-8f1f-f15b9a2083e1",
  "importer": "effect",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\n#if USE_TEXTURE\n    attribute vec2 a_uv0;\n    varying vec2 v_uv0;\n#endif\nattribute vec4 a_color;\nvarying vec4 v_color;\nvoid main () {\n    mat4 mvp;\n    #if CC_USE_MODEL\n        mvp = cc_matViewProj * cc_matWorld;\n    #else\n        mvp = cc_matViewProj;\n    #endif\n    #if USE_TEXTURE\n        v_uv0 = a_uv0;\n    #endif\n    #if USE_TINT\n    #endif\n    v_color = a_color;\n    gl_Position = mvp * vec4(a_position, 1);\n}",
        "frag": "\n  precision highp float;\n  #if USE_TEXTURE\n      varying vec2 v_uv0;\n      uniform sampler2D texture;\n  #endif\n  varying vec4 v_color;\n  uniform float uIntensity;\nuniform sampler2D uTex;\nvec4 CyberpunkStyle_main(sampler2D Tex, vec2 UV, float Intensity)\n{\n    vec4 mainColor = texture2D(Tex, UV);\n    vec3 xyz = mainColor.rgb;\n    float oldx = xyz.x;\n    float oldy = xyz.y;\n    float add = abs(oldx - oldy) * 0.5;\n    float stepxy = step(xyz.y, xyz.x);\n    float stepyx = 1.0 - stepxy;\n    xyz.x = stepxy * (oldx + add) + stepyx * (oldx - add);\n    xyz.y = stepyx * (oldy + add) + stepxy * (oldy - add);\n    xyz.z = sqrt(xyz.z);\n    return vec4(mix(mainColor.rgb, xyz, Intensity), mainColor.a);\n}\nvoid main () {\n    gl_FragColor = CyberpunkStyle_main(texture, v_uv0, uIntensity);\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\n#if USE_TEXTURE\n    in vec2 a_uv0;\n    out vec2 v_uv0;\n#endif\nin vec4 a_color;\nout vec4 v_color;\nvoid main () {\n    mat4 mvp;\n    #if CC_USE_MODEL\n        mvp = cc_matViewProj * cc_matWorld;\n    #else\n        mvp = cc_matViewProj;\n    #endif\n    #if USE_TEXTURE\n        v_uv0 = a_uv0;\n    #endif\n    #if USE_TINT\n    #endif\n    v_color = a_color;\n    gl_Position = mvp * vec4(a_position, 1);\n}",
        "frag": "\n  precision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\n  #if USE_TEXTURE\n      in vec2 v_uv0;\n      uniform sampler2D texture;\n  #endif\n  in vec4 v_color;\n  uniform Constant {\n  float uIntensity;\n};\nuniform sampler2D uTex;\nvec4 CyberpunkStyle_main(sampler2D Tex, vec2 UV, float Intensity)\n{\n    vec4 mainColor = texture2D(Tex, UV);\n    vec3 xyz = mainColor.rgb;\n    float oldx = xyz.x;\n    float oldy = xyz.y;\n    float add = abs(oldx - oldy) * 0.5;\n    float stepxy = step(xyz.y, xyz.x);\n    float stepyx = 1.0 - stepxy;\n    xyz.x = stepxy * (oldx + add) + stepyx * (oldx - add);\n    xyz.y = stepyx * (oldy + add) + stepxy * (oldy - add);\n    xyz.z = sqrt(xyz.z);\n    return vec4(mix(mainColor.rgb, xyz, Intensity), mainColor.a);\n}\nvoid main () {\n    gl_FragColor = CyberpunkStyle_main(texture, v_uv0, uIntensity);\n}"
      }
    }
  ],
  "subMetas": {}
}