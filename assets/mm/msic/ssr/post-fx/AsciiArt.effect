
CCEffect %{
techniques: 
  - passes: 
      - vert: vs
        frag: fs
        blendState: 
          targets: 
            - blend: true
        rasterizerState: 
          cullMode: none
        properties: 
          texture: 
            value: white
          uSize: 
            value: 
              - 300.0
              - 300.0
}%
        
CCProgram vs %{
    precision highp float;
    #include <cc-global>
    #include <cc-local>

    in vec3 a_position;
    #if USE_TEXTURE
        in vec2 a_uv0;
        out vec2 v_uv0;
    #endif  
    in vec4 a_color;
    out vec4 v_color;

    void main () {
        mat4 mvp;
        #if CC_USE_MODEL
            mvp = cc_matViewProj * cc_matWorld;
        #else
            mvp = cc_matViewProj;
        #endif

        #if USE_TEXTURE
            v_uv0 = a_uv0;
        #endif

        #if USE_TINT
            // clear warning for spine
        #endif

        v_color = a_color;
        gl_Position = mvp * vec4(a_position, 1);
    }
}%
        
CCProgram fs %{
    precision highp float;
    #include <cc-global>
    #if USE_TEXTURE
        in vec2 v_uv0;
        uniform sampler2D texture;
    #endif
    in vec4 v_color;
    uniform Constant {
		vec2 uSize;
	};
	uniform sampler2D uTex;

    float character(float n, vec2 p) 
	{
	    p = floor(p * vec2(4.0, -4.0) + 2.5);
	    if (clamp(p.x, 0.0, 4.0) == p.x && clamp(p.y, 0.0, 4.0) == p.y) {
	        float c = mod(n / exp2(p.x + 5.0 * p.y), 2.0);
	        if (int(c) == 1) return 1.0;
	    } 
	    return 0.0;
	}
	vec4 AsciiArt_main(sampler2D Tex, vec2 UV, vec2 Size) 
	{
	    vec2 cuv = UV * Size;
	    vec3 col = texture2D(Tex, floor(cuv / 8.0) * 8.0 / Size).rgb;  
	    float gray = (col.r + col.b) / 2.0; 
	    float n =  65536.0;
	    if (gray > 0.2) n = 65600.0;
	    if (gray > 0.3) n = 332772.0;
	    if (gray > 0.4) n = 15255086.0;
	    if (gray > 0.5) n = 23385164.0;
	    if (gray > 0.6) n = 15252014.0;
	    if (gray > 0.7) n = 13199452.0;
	    if (gray > 0.8) n = 11512810.0;
	    vec2 p = mod(cuv / 4.0, 2.0) - 1.0;
	    col = col * character(n, p);
	    return vec4(col, texture2D(Tex, UV).a);
	}
	void main () {
	    gl_FragColor = AsciiArt_main(texture, v_uv0, uSize);
	} 
	
}%
        