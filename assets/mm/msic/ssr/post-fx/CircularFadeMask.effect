
CCEffect %{
techniques: 
  - passes: 
      - vert: vs
        frag: fs
        blendState: 
          targets: 
            - blend: true
        rasterizerState: 
          cullMode: none
        properties: 
          texture: 
            value: white
          ucenter: 
            value: 
              - 0.5
              - 0.5
          uOutterSize: 
            value: 1.3
          uInnerSize: 
            value: 1.0
          uMaskColor: 
            value: 
              - 0.000
              - 1.000
              - 1.000
              - 1.000
            inspector: 
              type: color
}%
        
CCProgram vs %{
    precision highp float;
    #include <cc-global>
    #include <cc-local>

    in vec3 a_position;
    #if USE_TEXTURE
        in vec2 a_uv0;
        out vec2 v_uv0;
    #endif  
    in vec4 a_color;
    out vec4 v_color;

    void main () {
        mat4 mvp;
        #if CC_USE_MODEL
            mvp = cc_matViewProj * cc_matWorld;
        #else
            mvp = cc_matViewProj;
        #endif

        #if USE_TEXTURE
            v_uv0 = a_uv0;
        #endif

        #if USE_TINT
            // clear warning for spine
        #endif

        v_color = a_color;
        gl_Position = mvp * vec4(a_position, 1);
    }
}%
        
CCProgram fs %{
    precision highp float;
    #include <cc-global>
    #if USE_TEXTURE
        in vec2 v_uv0;
        uniform sampler2D texture;
    #endif
    in vec4 v_color;
    uniform Constant {
		vec4 uMaskColor;
		vec2 ucenter;
		float uOutterSize;
		float uInnerSize;
	};
	uniform sampler2D uTex;

    
	vec4 CircularFadeMask_main(sampler2D Tex, vec2 uv, vec2 center, float OutterSize, float InnerSize, vec4 MaskColor) 
	{
	    vec4 mainColor = texture2D(texture, uv);
	    return (InnerSize - distance(center, uv) * OutterSize) * vec4(MaskColor.rgb * mainColor.rgb, mainColor.a);
	}
	void main () {
	    gl_FragColor = CircularFadeMask_main(texture, v_uv0, ucenter, uOutterSize, uInnerSize, uMaskColor);
	} 
	
}%
        