{
  "ver": "1.0.27",
  "uuid": "4b6c0827-c68d-4b71-8d87-96475ebcdc2b",
  "importer": "effect",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\n#if USE_TEXTURE\n    attribute vec2 a_uv0;\n    varying vec2 v_uv0;\n#endif\nattribute vec4 a_color;\nvarying vec4 v_color;\nvoid main () {\n    mat4 mvp;\n    #if CC_USE_MODEL\n        mvp = cc_matViewProj * cc_matWorld;\n    #else\n        mvp = cc_matViewProj;\n    #endif\n    #if USE_TEXTURE\n        v_uv0 = a_uv0;\n    #endif\n    #if USE_TINT\n    #endif\n    v_color = a_color;\n    gl_Position = mvp * vec4(a_position, 1);\n}",
        "frag": "\n  precision highp float;\n  #if USE_TEXTURE\n      varying vec2 v_uv0;\n      uniform sampler2D texture;\n  #endif\n  varying vec4 v_color;\n  uniform float uNoiseIntensity;\nuniform float uSandIntensity;\n  float rand(vec2 co)\n{\n    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\n}\nvec4 SandStyle_main(vec4 texColor, vec2 UV, float NoiseIntensity, float SandIntensity)\n{\n    float lum = dot(texColor.rgb, vec3(0.222, 0.707, 0.071));\n    float noise = mix(lum, rand(UV), NoiseIntensity);\n    vec3 sandColor = vec3(noise) + vec3(0.5, 0.3, -0.5);\n    sandColor = mix(texColor.rgb, sandColor.rgb, SandIntensity);\n    return vec4(sandColor, texColor.a);\n}\nvoid main () {\n    gl_FragColor = SandStyle_main(texture2D(texture, v_uv0), v_uv0, uNoiseIntensity, uSandIntensity);\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\n#if USE_TEXTURE\n    in vec2 a_uv0;\n    out vec2 v_uv0;\n#endif\nin vec4 a_color;\nout vec4 v_color;\nvoid main () {\n    mat4 mvp;\n    #if CC_USE_MODEL\n        mvp = cc_matViewProj * cc_matWorld;\n    #else\n        mvp = cc_matViewProj;\n    #endif\n    #if USE_TEXTURE\n        v_uv0 = a_uv0;\n    #endif\n    #if USE_TINT\n    #endif\n    v_color = a_color;\n    gl_Position = mvp * vec4(a_position, 1);\n}",
        "frag": "\n  precision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\n  #if USE_TEXTURE\n      in vec2 v_uv0;\n      uniform sampler2D texture;\n  #endif\n  in vec4 v_color;\n  uniform Constant {\n  float uNoiseIntensity;\n  float uSandIntensity;\n};\n  float rand(vec2 co)\n{\n    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\n}\nvec4 SandStyle_main(vec4 texColor, vec2 UV, float NoiseIntensity, float SandIntensity)\n{\n    float lum = dot(texColor.rgb, vec3(0.222, 0.707, 0.071));\n    float noise = mix(lum, rand(UV), NoiseIntensity);\n    vec3 sandColor = vec3(noise) + vec3(0.5, 0.3, -0.5);\n    sandColor = mix(texColor.rgb, sandColor.rgb, SandIntensity);\n    return vec4(sandColor, texColor.a);\n}\nvoid main () {\n    gl_FragColor = SandStyle_main(texture2D(texture, v_uv0), v_uv0, uNoiseIntensity, uSandIntensity);\n}"
      }
    }
  ],
  "subMetas": {}
}