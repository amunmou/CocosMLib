{
  "ver": "1.0.27",
  "uuid": "319c16cf-39ca-4e8b-a707-2f52fce9b563",
  "importer": "effect",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\n#if USE_TEXTURE\n    attribute vec2 a_uv0;\n    varying vec2 v_uv0;\n#endif\nattribute vec4 a_color;\nvarying vec4 v_color;\nvoid main () {\n    mat4 mvp;\n    #if CC_USE_MODEL\n        mvp = cc_matViewProj * cc_matWorld;\n    #else\n        mvp = cc_matViewProj;\n    #endif\n    #if USE_TEXTURE\n        v_uv0 = a_uv0;\n    #endif\n    #if USE_TINT\n    #endif\n    v_color = a_color;\n    gl_Position = mvp * vec4(a_position, 1);\n}",
        "frag": "\n  precision highp float;\n  #if USE_TEXTURE\n      varying vec2 v_uv0;\n      uniform sampler2D texture;\n  #endif\n  varying vec4 v_color;\n  uniform float uSize;\nuniform float uBrightness;\nuniform sampler2D uTex;\n  vec4 pixelize(sampler2D tex, vec2 uv, float scale)\n{\n    float dx = 1.0 / scale;\n    float dy = 1.0 / scale;\n    vec2 coord = vec2(dx * ceil(uv.x / dx), dy * ceil(uv.y / dy));\n    return texture2D(tex, coord);\n}\nvec4 PolkaDots_main(sampler2D Tex, vec2 UV, float Size, float Brightness)\n{\n    vec2 coord = UV * Size;\n    vec4 resColor = pixelize(Tex, UV, Size) * Brightness;\n    float mvx = abs(sin(coord.x * 3.1415)) * 1.0;\n    float mvy = abs(sin(coord.y * 3.1415)) * 1.5;\n    if (mvx * mvy < 1.0) {\n        resColor = vec4(0.0, 0.0, 0.0, texture2D(Tex, UV).a);\n    }\n    else {\n        resColor = resColor * (mvx * mvy);\n    }\n    return resColor;\n}\nvoid main () {\n    gl_FragColor = PolkaDots_main(texture, v_uv0, uSize, uBrightness);\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\n#if USE_TEXTURE\n    in vec2 a_uv0;\n    out vec2 v_uv0;\n#endif\nin vec4 a_color;\nout vec4 v_color;\nvoid main () {\n    mat4 mvp;\n    #if CC_USE_MODEL\n        mvp = cc_matViewProj * cc_matWorld;\n    #else\n        mvp = cc_matViewProj;\n    #endif\n    #if USE_TEXTURE\n        v_uv0 = a_uv0;\n    #endif\n    #if USE_TINT\n    #endif\n    v_color = a_color;\n    gl_Position = mvp * vec4(a_position, 1);\n}",
        "frag": "\n  precision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\n  #if USE_TEXTURE\n      in vec2 v_uv0;\n      uniform sampler2D texture;\n  #endif\n  in vec4 v_color;\n  uniform Constant {\n  float uSize;\n  float uBrightness;\n};\nuniform sampler2D uTex;\n  vec4 pixelize(sampler2D tex, vec2 uv, float scale)\n{\n    float dx = 1.0 / scale;\n    float dy = 1.0 / scale;\n    vec2 coord = vec2(dx * ceil(uv.x / dx), dy * ceil(uv.y / dy));\n    return texture2D(tex, coord);\n}\nvec4 PolkaDots_main(sampler2D Tex, vec2 UV, float Size, float Brightness)\n{\n    vec2 coord = UV * Size;\n    vec4 resColor = pixelize(Tex, UV, Size) * Brightness;\n    float mvx = abs(sin(coord.x * 3.1415)) * 1.0;\n    float mvy = abs(sin(coord.y * 3.1415)) * 1.5;\n    if (mvx * mvy < 1.0) {\n        resColor = vec4(0.0, 0.0, 0.0, texture2D(Tex, UV).a);\n    }\n    else {\n        resColor = resColor * (mvx * mvy);\n    }\n    return resColor;\n}\nvoid main () {\n    gl_FragColor = PolkaDots_main(texture, v_uv0, uSize, uBrightness);\n}"
      }
    }
  ],
  "subMetas": {}
}