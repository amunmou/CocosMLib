"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.onAfterMake = exports.onBeforeMake = exports.onError = exports.onAfterBuild = exports.onAfterCompressSettings = exports.onBeforeCompressSettings = exports.onBeforeBuild = void 0;
const BuildTemplate_1 = require("./postbuild/BuildTemplate");
const HotUpdate_1 = require("./postbuild/HotUpdate");
const Minigame_1 = require("./postbuild/Minigame");
const Config_1 = require("../tools/Config");
const Logger_1 = require("../tools/Logger");
const Utils_1 = require("../tools/Utils");
const onBeforeBuild = async function (options, result) {
    // Todo some thing
    Logger_1.Logger.info("build options", JSON.stringify(options));
    Logger_1.Logger.info("onBeforeBuild");
};
exports.onBeforeBuild = onBeforeBuild;
const onBeforeCompressSettings = async function (options, result) {
    // Todo some thing
    Logger_1.Logger.info('onBeforeCompressSettings');
};
exports.onBeforeCompressSettings = onBeforeCompressSettings;
const onAfterCompressSettings = async function (options, result) {
    // Todo some thing
    Logger_1.Logger.info('onAfterCompressSettings');
};
exports.onAfterCompressSettings = onAfterCompressSettings;
const onAfterBuild = async function (options, result) {
    Logger_1.Logger.info("onAfterBuild");
    BuildTemplate_1.BuildTemplate.copy(options, result);
    if (Utils_1.Utils.isNative(options.platform)) {
        /** 是否启用热更 */
        let hotupdateEnable = Config_1.Config.get("gameSetting.hotupdate", false);
        Logger_1.Logger.info('hotupdateEnable', hotupdateEnable);
        if (hotupdateEnable) {
            HotUpdate_1.HotUpdate.modifyJsFile(options, result);
            HotUpdate_1.HotUpdate.replaceManifest(options, result);
        }
    }
    Minigame_1.Minigame.modifyServer(options, result);
};
exports.onAfterBuild = onAfterBuild;
const onError = async function (options, result) {
    // Todo some thing
    Logger_1.Logger.info("run onError");
};
exports.onError = onError;
const onBeforeMake = async function (root, options) {
    Logger_1.Logger.info(`onBeforeMake: root: ${root}, options: ${options}`);
};
exports.onBeforeMake = onBeforeMake;
const onAfterMake = async function (root, options) {
    Logger_1.Logger.info(`onAfterMake: root: ${root}, options: ${options}`);
};
exports.onAfterMake = onAfterMake;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSG9va3MuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zb3VyY2UvYnVpbGRlci9Ib29rcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSw2REFBMEQ7QUFDMUQscURBQWtEO0FBQ2xELG1EQUFnRDtBQUNoRCw0Q0FBeUM7QUFDekMsNENBQXlDO0FBQ3pDLDBDQUF1QztBQUdoQyxNQUFNLGFBQWEsR0FBNEIsS0FBSyxXQUFXLE9BQXlCLEVBQUUsTUFBb0I7SUFDakgsa0JBQWtCO0lBQ2xCLGVBQU0sQ0FBQyxJQUFJLENBQUMsZUFBZSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztJQUN0RCxlQUFNLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO0FBQ2pDLENBQUMsQ0FBQztBQUpXLFFBQUEsYUFBYSxpQkFJeEI7QUFFSyxNQUFNLHdCQUF3QixHQUF1QyxLQUFLLFdBQVcsT0FBeUIsRUFBRSxNQUFvQjtJQUN2SSxrQkFBa0I7SUFDbEIsZUFBTSxDQUFDLElBQUksQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO0FBQzVDLENBQUMsQ0FBQztBQUhXLFFBQUEsd0JBQXdCLDRCQUduQztBQUVLLE1BQU0sdUJBQXVCLEdBQXNDLEtBQUssV0FBVyxPQUF5QixFQUFFLE1BQW9CO0lBQ3JJLGtCQUFrQjtJQUNsQixlQUFNLENBQUMsSUFBSSxDQUFDLHlCQUF5QixDQUFDLENBQUM7QUFDM0MsQ0FBQyxDQUFDO0FBSFcsUUFBQSx1QkFBdUIsMkJBR2xDO0FBRUssTUFBTSxZQUFZLEdBQTJCLEtBQUssV0FBVyxPQUF5QixFQUFFLE1BQW9CO0lBQy9HLGVBQU0sQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7SUFDNUIsNkJBQWEsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ3BDLElBQUksYUFBSyxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEVBQUU7UUFDbEMsYUFBYTtRQUNiLElBQUksZUFBZSxHQUFHLGVBQU0sQ0FBQyxHQUFHLENBQUMsdUJBQXVCLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDakUsZUFBTSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxlQUFlLENBQUMsQ0FBQztRQUNoRCxJQUFJLGVBQWUsRUFBRTtZQUNqQixxQkFBUyxDQUFDLFlBQVksQ0FBQyxPQUFPLEVBQUUsTUFBTSxDQUFDLENBQUM7WUFDeEMscUJBQVMsQ0FBQyxlQUFlLENBQUMsT0FBTyxFQUFFLE1BQU0sQ0FBQyxDQUFDO1NBQzlDO0tBQ0o7SUFDRCxtQkFBUSxDQUFDLFlBQVksQ0FBQyxPQUFPLEVBQUUsTUFBTSxDQUFDLENBQUM7QUFDM0MsQ0FBQyxDQUFDO0FBYlcsUUFBQSxZQUFZLGdCQWF2QjtBQUVLLE1BQU0sT0FBTyxHQUFzQixLQUFLLFdBQVcsT0FBTyxFQUFFLE1BQU07SUFDckUsa0JBQWtCO0lBQ2xCLGVBQU0sQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7QUFDL0IsQ0FBQyxDQUFDO0FBSFcsUUFBQSxPQUFPLFdBR2xCO0FBRUssTUFBTSxZQUFZLEdBQTJCLEtBQUssV0FBVyxJQUFJLEVBQUUsT0FBTztJQUM3RSxlQUFNLENBQUMsSUFBSSxDQUFDLHVCQUF1QixJQUFJLGNBQWMsT0FBTyxFQUFFLENBQUMsQ0FBQztBQUNwRSxDQUFDLENBQUM7QUFGVyxRQUFBLFlBQVksZ0JBRXZCO0FBRUssTUFBTSxXQUFXLEdBQTBCLEtBQUssV0FBVyxJQUFJLEVBQUUsT0FBTztJQUMzRSxlQUFNLENBQUMsSUFBSSxDQUFDLHNCQUFzQixJQUFJLGNBQWMsT0FBTyxFQUFFLENBQUMsQ0FBQztBQUNuRSxDQUFDLENBQUM7QUFGVyxRQUFBLFdBQVcsZUFFdEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCdWlsZEhvb2ssIElCdWlsZFJlc3VsdCwgSUJ1aWxkVGFza09wdGlvbiB9IGZyb20gXCJAY29jb3MvY3JlYXRvci10eXBlcy9lZGl0b3IvcGFja2FnZXMvYnVpbGRlci9AdHlwZXMvcHVibGljXCI7XG5pbXBvcnQgeyBCdWlsZFRlbXBsYXRlIH0gZnJvbSAnLi9wb3N0YnVpbGQvQnVpbGRUZW1wbGF0ZSc7XG5pbXBvcnQgeyBIb3RVcGRhdGUgfSBmcm9tICcuL3Bvc3RidWlsZC9Ib3RVcGRhdGUnO1xuaW1wb3J0IHsgTWluaWdhbWUgfSBmcm9tICcuL3Bvc3RidWlsZC9NaW5pZ2FtZSc7XG5pbXBvcnQgeyBDb25maWcgfSBmcm9tIFwiLi4vdG9vbHMvQ29uZmlnXCI7XG5pbXBvcnQgeyBMb2dnZXIgfSBmcm9tICcuLi90b29scy9Mb2dnZXInO1xuaW1wb3J0IHsgVXRpbHMgfSBmcm9tICcuLi90b29scy9VdGlscyc7XG5cblxuZXhwb3J0IGNvbnN0IG9uQmVmb3JlQnVpbGQ6IEJ1aWxkSG9vay5vbkJlZm9yZUJ1aWxkID0gYXN5bmMgZnVuY3Rpb24gKG9wdGlvbnM6IElCdWlsZFRhc2tPcHRpb24sIHJlc3VsdDogSUJ1aWxkUmVzdWx0KSB7XG4gICAgLy8gVG9kbyBzb21lIHRoaW5nXG4gICAgTG9nZ2VyLmluZm8oXCJidWlsZCBvcHRpb25zXCIsIEpTT04uc3RyaW5naWZ5KG9wdGlvbnMpKTtcbiAgICBMb2dnZXIuaW5mbyhcIm9uQmVmb3JlQnVpbGRcIik7XG59O1xuXG5leHBvcnQgY29uc3Qgb25CZWZvcmVDb21wcmVzc1NldHRpbmdzOiBCdWlsZEhvb2sub25CZWZvcmVDb21wcmVzc1NldHRpbmdzID0gYXN5bmMgZnVuY3Rpb24gKG9wdGlvbnM6IElCdWlsZFRhc2tPcHRpb24sIHJlc3VsdDogSUJ1aWxkUmVzdWx0KSB7XG4gICAgLy8gVG9kbyBzb21lIHRoaW5nXG4gICAgTG9nZ2VyLmluZm8oJ29uQmVmb3JlQ29tcHJlc3NTZXR0aW5ncycpO1xufTtcblxuZXhwb3J0IGNvbnN0IG9uQWZ0ZXJDb21wcmVzc1NldHRpbmdzOiBCdWlsZEhvb2sub25BZnRlckNvbXByZXNzU2V0dGluZ3MgPSBhc3luYyBmdW5jdGlvbiAob3B0aW9uczogSUJ1aWxkVGFza09wdGlvbiwgcmVzdWx0OiBJQnVpbGRSZXN1bHQpIHtcbiAgICAvLyBUb2RvIHNvbWUgdGhpbmdcbiAgICBMb2dnZXIuaW5mbygnb25BZnRlckNvbXByZXNzU2V0dGluZ3MnKTtcbn07XG5cbmV4cG9ydCBjb25zdCBvbkFmdGVyQnVpbGQ6IEJ1aWxkSG9vay5vbkFmdGVyQnVpbGQgPSBhc3luYyBmdW5jdGlvbiAob3B0aW9uczogSUJ1aWxkVGFza09wdGlvbiwgcmVzdWx0OiBJQnVpbGRSZXN1bHQpIHtcbiAgICBMb2dnZXIuaW5mbyhcIm9uQWZ0ZXJCdWlsZFwiKTtcbiAgICBCdWlsZFRlbXBsYXRlLmNvcHkob3B0aW9ucywgcmVzdWx0KTtcbiAgICBpZiAoVXRpbHMuaXNOYXRpdmUob3B0aW9ucy5wbGF0Zm9ybSkpIHtcbiAgICAgICAgLyoqIOaYr+WQpuWQr+eUqOeDreabtCAqL1xuICAgICAgICBsZXQgaG90dXBkYXRlRW5hYmxlID0gQ29uZmlnLmdldChcImdhbWVTZXR0aW5nLmhvdHVwZGF0ZVwiLCBmYWxzZSk7XG4gICAgICAgIExvZ2dlci5pbmZvKCdob3R1cGRhdGVFbmFibGUnLCBob3R1cGRhdGVFbmFibGUpO1xuICAgICAgICBpZiAoaG90dXBkYXRlRW5hYmxlKSB7XG4gICAgICAgICAgICBIb3RVcGRhdGUubW9kaWZ5SnNGaWxlKG9wdGlvbnMsIHJlc3VsdCk7XG4gICAgICAgICAgICBIb3RVcGRhdGUucmVwbGFjZU1hbmlmZXN0KG9wdGlvbnMsIHJlc3VsdCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgTWluaWdhbWUubW9kaWZ5U2VydmVyKG9wdGlvbnMsIHJlc3VsdCk7XG59O1xuXG5leHBvcnQgY29uc3Qgb25FcnJvcjogQnVpbGRIb29rLm9uRXJyb3IgPSBhc3luYyBmdW5jdGlvbiAob3B0aW9ucywgcmVzdWx0KSB7XG4gICAgLy8gVG9kbyBzb21lIHRoaW5nXG4gICAgTG9nZ2VyLmluZm8oXCJydW4gb25FcnJvclwiKTtcbn07XG5cbmV4cG9ydCBjb25zdCBvbkJlZm9yZU1ha2U6IEJ1aWxkSG9vay5vbkJlZm9yZU1ha2UgPSBhc3luYyBmdW5jdGlvbiAocm9vdCwgb3B0aW9ucykge1xuICAgIExvZ2dlci5pbmZvKGBvbkJlZm9yZU1ha2U6IHJvb3Q6ICR7cm9vdH0sIG9wdGlvbnM6ICR7b3B0aW9uc31gKTtcbn07XG5cbmV4cG9ydCBjb25zdCBvbkFmdGVyTWFrZTogQnVpbGRIb29rLm9uQWZ0ZXJNYWtlID0gYXN5bmMgZnVuY3Rpb24gKHJvb3QsIG9wdGlvbnMpIHtcbiAgICBMb2dnZXIuaW5mbyhgb25BZnRlck1ha2U6IHJvb3Q6ICR7cm9vdH0sIG9wdGlvbnM6ICR7b3B0aW9uc31gKTtcbn07XG4iXX0=