"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.unload = exports.load = exports.methods = void 0;
const CmdExecute_1 = require("./CmdExecute");
const HotUpdate_1 = require("./postbuild/HotUpdate");
const SceneCmdExecute_1 = require("./scene/SceneCmdExecute");
/**
 * @en Registration method for the main process of Extension
 * @zh 为扩展的主进程的注册方法
 */
exports.methods = {
    /**  */
    saveGameSetting: CmdExecute_1.CmdExecute.saveGameSetting.bind(CmdExecute_1.CmdExecute),
    loadExcel: CmdExecute_1.CmdExecute.loadExcel.bind(CmdExecute_1.CmdExecute),
    genConst: CmdExecute_1.CmdExecute.genConst.bind(CmdExecute_1.CmdExecute),
    closeTexCompress: CmdExecute_1.CmdExecute.closeTexCompress.bind(CmdExecute_1.CmdExecute),
    setTexCompress: CmdExecute_1.CmdExecute.setTexCompress.bind(CmdExecute_1.CmdExecute),
    genHotUpdateRes: HotUpdate_1.HotUpdate.genHotUpdateRes.bind(HotUpdate_1.HotUpdate),
    openLogFile: CmdExecute_1.CmdExecute.openLogFile.bind(CmdExecute_1.CmdExecute),
    //场景操作命令
    autoGenProperty: SceneCmdExecute_1.SceneCmdExecute.autoGenProperty.bind(SceneCmdExecute_1.SceneCmdExecute),
    replaceComponent: SceneCmdExecute_1.SceneCmdExecute.replaceComponent.bind(SceneCmdExecute_1.SceneCmdExecute),
    //测试
    test: CmdExecute_1.CmdExecute.test.bind(CmdExecute_1.CmdExecute),
};
/**
 * @en Hooks triggered after extension loading is complete
 * @zh 扩展加载完成后触发的钩子
 */
function load() { }
exports.load = load;
/**
 * @en Hooks triggered after extension uninstallation is complete
 * @zh 扩展卸载完成后触发的钩子
 */
function unload() { }
exports.unload = unload;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NvdXJjZS9tYWluLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDZDQUEwQztBQUMxQyxxREFBa0Q7QUFDbEQsNkRBQTBEO0FBRzFEOzs7R0FHRztBQUNVLFFBQUEsT0FBTyxHQUE0QztJQUM1RCxPQUFPO0lBQ1AsZUFBZSxFQUFFLHVCQUFVLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyx1QkFBVSxDQUFDO0lBQzVELFNBQVMsRUFBRSx1QkFBVSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsdUJBQVUsQ0FBQztJQUNoRCxRQUFRLEVBQUUsdUJBQVUsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLHVCQUFVLENBQUM7SUFDOUMsZ0JBQWdCLEVBQUUsdUJBQVUsQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsdUJBQVUsQ0FBQztJQUM5RCxjQUFjLEVBQUUsdUJBQVUsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLHVCQUFVLENBQUM7SUFDMUQsZUFBZSxFQUFFLHFCQUFTLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxxQkFBUyxDQUFDO0lBQzFELFdBQVcsRUFBRSx1QkFBVSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsdUJBQVUsQ0FBQztJQUNwRCxRQUFRO0lBQ1IsZUFBZSxFQUFFLGlDQUFlLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxpQ0FBZSxDQUFDO0lBQ3RFLGdCQUFnQixFQUFFLGlDQUFlLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLGlDQUFlLENBQUM7SUFFeEUsSUFBSTtJQUNKLElBQUksRUFBRSx1QkFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsdUJBQVUsQ0FBQztDQUN6QyxDQUFDO0FBRUY7OztHQUdHO0FBQ0gsU0FBZ0IsSUFBSSxLQUFLLENBQUM7QUFBMUIsb0JBQTBCO0FBRTFCOzs7R0FHRztBQUNILFNBQWdCLE1BQU0sS0FBSyxDQUFDO0FBQTVCLHdCQUE0QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENtZEV4ZWN1dGUgfSBmcm9tIFwiLi9DbWRFeGVjdXRlXCI7XHJcbmltcG9ydCB7IEhvdFVwZGF0ZSB9IGZyb20gXCIuL3Bvc3RidWlsZC9Ib3RVcGRhdGVcIjtcclxuaW1wb3J0IHsgU2NlbmVDbWRFeGVjdXRlIH0gZnJvbSBcIi4vc2NlbmUvU2NlbmVDbWRFeGVjdXRlXCI7XHJcblxyXG5cclxuLyoqXHJcbiAqIEBlbiBSZWdpc3RyYXRpb24gbWV0aG9kIGZvciB0aGUgbWFpbiBwcm9jZXNzIG9mIEV4dGVuc2lvblxyXG4gKiBAemgg5Li65omp5bGV55qE5Li76L+b56iL55qE5rOo5YaM5pa55rOVXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgbWV0aG9kczogeyBba2V5OiBzdHJpbmddOiAoLi4uYW55OiBhbnkpID0+IGFueSB9ID0ge1xyXG4gICAgLyoqICAqL1xyXG4gICAgc2F2ZUdhbWVTZXR0aW5nOiBDbWRFeGVjdXRlLnNhdmVHYW1lU2V0dGluZy5iaW5kKENtZEV4ZWN1dGUpLFxyXG4gICAgbG9hZEV4Y2VsOiBDbWRFeGVjdXRlLmxvYWRFeGNlbC5iaW5kKENtZEV4ZWN1dGUpLFxyXG4gICAgZ2VuQ29uc3Q6IENtZEV4ZWN1dGUuZ2VuQ29uc3QuYmluZChDbWRFeGVjdXRlKSxcclxuICAgIGNsb3NlVGV4Q29tcHJlc3M6IENtZEV4ZWN1dGUuY2xvc2VUZXhDb21wcmVzcy5iaW5kKENtZEV4ZWN1dGUpLFxyXG4gICAgc2V0VGV4Q29tcHJlc3M6IENtZEV4ZWN1dGUuc2V0VGV4Q29tcHJlc3MuYmluZChDbWRFeGVjdXRlKSxcclxuICAgIGdlbkhvdFVwZGF0ZVJlczogSG90VXBkYXRlLmdlbkhvdFVwZGF0ZVJlcy5iaW5kKEhvdFVwZGF0ZSksXHJcbiAgICBvcGVuTG9nRmlsZTogQ21kRXhlY3V0ZS5vcGVuTG9nRmlsZS5iaW5kKENtZEV4ZWN1dGUpLFxyXG4gICAgLy/lnLrmma/mk43kvZzlkb3ku6RcclxuICAgIGF1dG9HZW5Qcm9wZXJ0eTogU2NlbmVDbWRFeGVjdXRlLmF1dG9HZW5Qcm9wZXJ0eS5iaW5kKFNjZW5lQ21kRXhlY3V0ZSksXHJcbiAgICByZXBsYWNlQ29tcG9uZW50OiBTY2VuZUNtZEV4ZWN1dGUucmVwbGFjZUNvbXBvbmVudC5iaW5kKFNjZW5lQ21kRXhlY3V0ZSksXHJcbiAgICBcclxuICAgIC8v5rWL6K+VXHJcbiAgICB0ZXN0OiBDbWRFeGVjdXRlLnRlc3QuYmluZChDbWRFeGVjdXRlKSxcclxufTtcclxuXHJcbi8qKlxyXG4gKiBAZW4gSG9va3MgdHJpZ2dlcmVkIGFmdGVyIGV4dGVuc2lvbiBsb2FkaW5nIGlzIGNvbXBsZXRlXHJcbiAqIEB6aCDmianlsZXliqDovb3lrozmiJDlkI7op6blj5HnmoTpkqnlrZBcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBsb2FkKCkgeyB9XHJcblxyXG4vKipcclxuICogQGVuIEhvb2tzIHRyaWdnZXJlZCBhZnRlciBleHRlbnNpb24gdW5pbnN0YWxsYXRpb24gaXMgY29tcGxldGVcclxuICogQHpoIOaJqeWxleWNuOi9veWujOaIkOWQjuinpuWPkeeahOmSqeWtkFxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHVubG9hZCgpIHsgfVxyXG5cclxuXHJcblxyXG4iXX0=