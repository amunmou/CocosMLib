"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Utils = void 0;
const child_process_1 = __importDefault(require("child_process"));
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
const Logger_1 = require("./Logger");
class Utils {
    static get ProjectPath() {
        if (!this.projectPath)
            this.projectPath = this.toUniSeparator(Editor.Project.path);
        return this.projectPath;
    }
    /** 是否原生平台 */
    static isNative(platform) {
        switch (platform) {
            case "windows":
            case "mac":
            case "linux":
            case "android":
            case "ios":
                return true;
        }
        return false;
    }
    /** 是否小游戏平台 */
    static isMinigame(platform) {
        switch (platform) {
            case "wechatgame":
            case "alipay-mini-game":
            case "bytedance-mini-game":
            case "baidu-mini-game":
            case "taobao-creative-app":
                return true;
        }
        return false;
    }
    /** 执行终端命令 */
    static exeCMD(workDir, cmd, onMsg) {
        let p = new Promise((resolve, reject) => {
            let result = child_process_1.default.exec(cmd, { cwd: workDir });
            result.stdout.on("data", (data) => {
                let d = data.toString();
                onMsg && onMsg(d);
                if (d.indexOf("continue") > -1) {
                    result.kill();
                }
            });
            result.stderr.on("data", (data) => {
                if (globalThis['Editor']) {
                    Logger_1.Logger.error(data.toString());
                }
                else {
                    Logger_1.Logger.error(data.toString());
                }
            });
            result.on("close", (code) => {
                resolve(code ? code : 0);
            });
        });
        return p;
    }
    /** 获取指定目录下所有文件 */
    static getAllFiles(dir, filter, topDirOnly = false) {
        dir = this.toAbsolutePath(dir);
        let files = [];
        if (!fs_1.default.existsSync(dir))
            return files;
        let walkSync = (currentDir, callback) => {
            fs_1.default.readdirSync(currentDir, { withFileTypes: true }).forEach(dirent => {
                let p = path_1.default.join(currentDir, dirent.name);
                if (dirent.isFile()) {
                    callback(p);
                }
                else if (dirent.isDirectory()) {
                    if (topDirOnly)
                        return;
                    walkSync(p, callback);
                }
            });
        };
        walkSync(dir, file => {
            if (file.endsWith(".meta"))
                return;
            if (!filter || filter(file)) {
                files.push(this.toUniSeparator(file));
            }
        });
        return files;
    }
    /** 获取指定目录下所有目录 */
    static getAllDirs(dir, filter, topDirOnly = false) {
        dir = this.toAbsolutePath(dir);
        let dirs = [];
        if (!fs_1.default.existsSync(dir))
            return dirs;
        let walkSync = (currentDir, callback) => {
            fs_1.default.readdirSync(currentDir, { withFileTypes: true }).forEach(dirent => {
                let p = path_1.default.join(currentDir, dirent.name);
                if (dirent.isDirectory()) {
                    callback(p);
                    if (topDirOnly)
                        return;
                    walkSync(p, callback);
                }
            });
        };
        walkSync(dir, subDir => {
            if (!filter || filter(subDir)) {
                dirs.push(this.toUniSeparator(subDir));
            }
        });
        return dirs;
    }
    /** 根据文件路径找到追加了md5值的实际文件路径 */
    static resolveFilePath(filePath) {
        let result = filePath;
        let dir = path_1.default.dirname(filePath);
        if (fs_1.default.existsSync(dir)) {
            let basename = path_1.default.basename(filePath);
            let ext = path_1.default.extname(filePath);
            let name = basename.replace(ext, ".");
            let reg = new RegExp(`${name}[A-Za-z0-9]{5}${ext}`);
            let dirents = fs_1.default.readdirSync(dir, { withFileTypes: true });
            for (const dirent of dirents) {
                let p = path_1.default.join(dir, dirent.name);
                if (dirent.isFile()) {
                    if (dirent.name == basename) {
                        break;
                    }
                    else {
                        if (reg.test(dirent.name)) {
                            result = p;
                            break;
                        }
                    }
                }
            }
        }
        return result.replace(/\\/g, "/");
    }
    /** 将追加了md5的文件路径还原为正常的文件路径 */
    static restoreFilePath(filePath) {
        let ext = path_1.default.extname(filePath);
        let p = filePath.replace(ext, "");
        let reg = new RegExp(/.+\.[A-Za-z0-9]{5}/);
        if (reg.test(p)) {
            let index = p.lastIndexOf(".");
            return p.substring(0, index) + ext;
        }
        else {
            return filePath;
        }
    }
    /** 刷新编辑器内的资源 */
    static refreshAsset(path) {
        if (!path.startsWith("db:") && fs_1.default.statSync(path).isDirectory()) {
            let files = Utils.getAllFiles(path, null, true);
            for (const file of files) {
                Editor.Message.send("asset-db", "refresh-asset", this.toAssetDBUrl(file));
            }
        }
        else {
            Editor.Message.send("asset-db", "refresh-asset", this.toAssetDBUrl(path));
        }
    }
    /** 删除编辑器内的资源 */
    static deleteAsset(path) {
        Editor.Message.send("asset-db", "delete-asset", this.toAssetDBUrl(path));
    }
    /** 将本地文件路径转化为编辑器内资源路径 */
    static toAssetDBUrl(path) {
        if (path.startsWith("db://"))
            return path;
        else
            return path.replace(this.ProjectPath + "/", "db://");
    }
    /** 将编辑器内资源路径转化为本地文件路径 */
    static toAbsolutePath(dbUrlOrprojUrl) {
        if (dbUrlOrprojUrl.startsWith("db://"))
            return dbUrlOrprojUrl.replace("db://", this.ProjectPath + "/");
        else if (dbUrlOrprojUrl.startsWith("project://"))
            return dbUrlOrprojUrl.replace("db://", this.ProjectPath + "/");
        else
            return dbUrlOrprojUrl;
    }
    /** 统一路径分隔符为(/) */
    static toUniSeparator(path) {
        return path.replace(/\\/g, "/");
    }
    /** 统一换行符为(\n) */
    static toUniLineBrake(content) {
        return content.replace(/\\r\\n/g, "\n");
    }
}
exports.Utils = Utils;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zb3VyY2UvdG9vbHMvVXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsa0VBQTBDO0FBQzFDLDRDQUFvQjtBQUNwQixnREFBd0I7QUFDeEIscUNBQWtDO0FBQ2xDLE1BQWEsS0FBSztJQUdQLE1BQU0sS0FBSyxXQUFXO1FBQ3pCLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVztZQUFFLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ25GLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQztJQUM1QixDQUFDO0lBRUQsYUFBYTtJQUNOLE1BQU0sQ0FBQyxRQUFRLENBQUMsUUFBZ0I7UUFDbkMsUUFBUSxRQUFRLEVBQUU7WUFDZCxLQUFLLFNBQVMsQ0FBQztZQUNmLEtBQUssS0FBSyxDQUFDO1lBQ1gsS0FBSyxPQUFPLENBQUM7WUFDYixLQUFLLFNBQVMsQ0FBQztZQUNmLEtBQUssS0FBSztnQkFDTixPQUFPLElBQUksQ0FBQztTQUNuQjtRQUNELE9BQU8sS0FBSyxDQUFDO0lBQ2pCLENBQUM7SUFFRCxjQUFjO0lBQ1AsTUFBTSxDQUFDLFVBQVUsQ0FBQyxRQUFnQjtRQUNyQyxRQUFRLFFBQVEsRUFBRTtZQUNkLEtBQUssWUFBWSxDQUFDO1lBQ2xCLEtBQUssa0JBQWtCLENBQUM7WUFDeEIsS0FBSyxxQkFBcUIsQ0FBQztZQUMzQixLQUFLLGlCQUFpQixDQUFDO1lBQ3ZCLEtBQUsscUJBQXFCO2dCQUN0QixPQUFPLElBQUksQ0FBQztTQUNuQjtRQUNELE9BQU8sS0FBSyxDQUFDO0lBQ2pCLENBQUM7SUFFRCxhQUFhO0lBQ04sTUFBTSxDQUFDLE1BQU0sQ0FBQyxPQUFlLEVBQUUsR0FBVyxFQUFFLEtBQTZCO1FBQzVFLElBQUksQ0FBQyxHQUFHLElBQUksT0FBTyxDQUFDLENB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XCI7XHJcbmltcG9ydCBmcyBmcm9tIFwiZnNcIjtcclxuaW1wb3J0IHBhdGggZnJvbSBcInBhdGhcIjtcclxuaW1wb3J0IHsgTG9nZ2VyIH0gZnJvbSBcIi4vTG9nZ2VyXCI7XHJcbmV4cG9ydCBjbGFzcyBVdGlscyB7XHJcblxyXG4gICAgcHJpdmF0ZSBzdGF0aWMgcHJvamVjdFBhdGg6IHN0cmluZztcclxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0IFByb2plY3RQYXRoKCkge1xyXG4gICAgICAgIGlmICghdGhpcy5wcm9qZWN0UGF0aCkgdGhpcy5wcm9qZWN0UGF0aCA9IHRoaXMudG9VbmlTZXBhcmF0b3IoRWRpdG9yLlByb2plY3QucGF0aCk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucHJvamVjdFBhdGg7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIOaYr+WQpuWOn+eUn+W5s+WPsCAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBpc05hdGl2ZShwbGF0Zm9ybTogc3RyaW5nKSB7XHJcbiAgICAgICAgc3dpdGNoIChwbGF0Zm9ybSkge1xyXG4gICAgICAgICAgICBjYXNlIFwid2luZG93c1wiOlxyXG4gICAgICAgICAgICBjYXNlIFwibWFjXCI6XHJcbiAgICAgICAgICAgIGNhc2UgXCJsaW51eFwiOlxyXG4gICAgICAgICAgICBjYXNlIFwiYW5kcm9pZFwiOlxyXG4gICAgICAgICAgICBjYXNlIFwiaW9zXCI6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiDmmK/lkKblsI/muLjmiI/lubPlj7AgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgaXNNaW5pZ2FtZShwbGF0Zm9ybTogc3RyaW5nKSB7XHJcbiAgICAgICAgc3dpdGNoIChwbGF0Zm9ybSkge1xyXG4gICAgICAgICAgICBjYXNlIFwid2VjaGF0Z2FtZVwiOlxyXG4gICAgICAgICAgICBjYXNlIFwiYWxpcGF5LW1pbmktZ2FtZVwiOlxyXG4gICAgICAgICAgICBjYXNlIFwiYnl0ZWRhbmNlLW1pbmktZ2FtZVwiOlxyXG4gICAgICAgICAgICBjYXNlIFwiYmFpZHUtbWluaS1nYW1lXCI6XHJcbiAgICAgICAgICAgIGNhc2UgXCJ0YW9iYW8tY3JlYXRpdmUtYXBwXCI6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiDmiafooYznu4jnq6/lkb3ku6QgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgZXhlQ01EKHdvcmtEaXI6IHN0cmluZywgY21kOiBzdHJpbmcsIG9uTXNnPzogKG1zZzogc3RyaW5nKSA9PiB2b2lkKSB7XHJcbiAgICAgICAgbGV0IHAgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICAgICAgICAgIGxldCByZXN1bHQgPSBjaGlsZF9wcm9jZXNzLmV4ZWMoY21kLCB7IGN3ZDogd29ya0RpciB9KTtcclxuICAgICAgICAgICAgcmVzdWx0LnN0ZG91dC5vbihcImRhdGFcIiwgKGRhdGEpID0+IHtcclxuICAgICAgICAgICAgICAgIGxldCBkID0gZGF0YS50b1N0cmluZygpO1xyXG4gICAgICAgICAgICAgICAgb25Nc2cgJiYgb25Nc2coZCk7XHJcbiAgICAgICAgICAgICAgICBpZiAoZC5pbmRleE9mKFwiY29udGludWVcIikgPiAtMSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdC5raWxsKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICByZXN1bHQuc3RkZXJyLm9uKFwiZGF0YVwiLCAoZGF0YSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKGdsb2JhbFRoaXNbJ0VkaXRvciddKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKGRhdGEudG9TdHJpbmcoKSk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIExvZ2dlci5lcnJvcihkYXRhLnRvU3RyaW5nKCkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgcmVzdWx0Lm9uKFwiY2xvc2VcIiwgKGNvZGUpID0+IHtcclxuICAgICAgICAgICAgICAgIHJlc29sdmUoY29kZSA/IGNvZGUgOiAwKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSlcclxuICAgICAgICByZXR1cm4gcDtcclxuICAgIH1cclxuXHJcbiAgICAvKiog6I635Y+W5oyH5a6a55uu5b2V5LiL5omA5pyJ5paH5Lu2ICovXHJcbiAgICBwdWJsaWMgc3RhdGljIGdldEFsbEZpbGVzKGRpcjogc3RyaW5nLCBmaWx0ZXI/OiAoZmlsZTogc3RyaW5nKSA9PiBib29sZWFuLCB0b3BEaXJPbmx5ID0gZmFsc2UpIHtcclxuICAgICAgICBkaXIgPSB0aGlzLnRvQWJzb2x1dGVQYXRoKGRpcik7XHJcbiAgICAgICAgbGV0IGZpbGVzOiBzdHJpbmdbXSA9IFtdO1xyXG4gICAgICAgIGlmICghZnMuZXhpc3RzU3luYyhkaXIpKSByZXR1cm4gZmlsZXM7XHJcbiAgICAgICAgbGV0IHdhbGtTeW5jID0gKGN1cnJlbnREaXI6IHN0cmluZywgY2FsbGJhY2s6IChmaWxlUGF0aDogc3RyaW5nKSA9PiB2b2lkKSA9PiB7XHJcbiAgICAgICAgICAgIGZzLnJlYWRkaXJTeW5jKGN1cnJlbnREaXIsIHsgd2l0aEZpbGVUeXBlczogdHJ1ZSB9KS5mb3JFYWNoKGRpcmVudCA9PiB7XHJcbiAgICAgICAgICAgICAgICBsZXQgcCA9IHBhdGguam9pbihjdXJyZW50RGlyLCBkaXJlbnQubmFtZSk7XHJcbiAgICAgICAgICAgICAgICBpZiAoZGlyZW50LmlzRmlsZSgpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2socCk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGRpcmVudC5pc0RpcmVjdG9yeSgpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRvcERpck9ubHkpIHJldHVybjtcclxuICAgICAgICAgICAgICAgICAgICB3YWxrU3luYyhwLCBjYWxsYmFjayk7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHdhbGtTeW5jKGRpciwgZmlsZSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChmaWxlLmVuZHNXaXRoKFwiLm1ldGFcIikpIHJldHVybjtcclxuICAgICAgICAgICAgaWYgKCFmaWx0ZXIgfHwgZmlsdGVyKGZpbGUpKSB7XHJcbiAgICAgICAgICAgICAgICBmaWxlcy5wdXNoKHRoaXMudG9VbmlTZXBhcmF0b3IoZmlsZSkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIGZpbGVzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiDojrflj5bmjIflrprnm67lvZXkuIvmiYDmnInnm67lvZUgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0QWxsRGlycyhkaXI6IHN0cmluZywgZmlsdGVyPzogKGRpcjogc3RyaW5nKSA9PiBib29sZWFuLCB0b3BEaXJPbmx5ID0gZmFsc2UpIHtcclxuICAgICAgICBkaXIgPSB0aGlzLnRvQWJzb2x1dGVQYXRoKGRpcik7XHJcbiAgICAgICAgbGV0IGRpcnM6IHN0cmluZ1tdID0gW107XHJcbiAgICAgICAgaWYgKCFmcy5leGlzdHNTeW5jKGRpcikpIHJldHVybiBkaXJzO1xyXG4gICAgICAgIGxldCB3YWxrU3luYyA9IChjdXJyZW50RGlyOiBzdHJpbmcsIGNhbGxiYWNrOiAoZmlsZVBhdGg6IHN0cmluZykgPT4gdm9pZCkgPT4ge1xyXG4gICAgICAgICAgICBmcy5yZWFkZGlyU3luYyhjdXJyZW50RGlyLCB7IHdpdGhGaWxlVHlwZXM6IHRydWUgfSkuZm9yRWFjaChkaXJlbnQgPT4ge1xyXG4gICAgICAgICAgICAgICAgbGV0IHAgPSBwYXRoLmpvaW4oY3VycmVudERpciwgZGlyZW50Lm5hbWUpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGRpcmVudC5pc0RpcmVjdG9yeSgpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2socCk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRvcERpck9ubHkpIHJldHVybjtcclxuICAgICAgICAgICAgICAgICAgICB3YWxrU3luYyhwLCBjYWxsYmFjayk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgd2Fsa1N5bmMoZGlyLCBzdWJEaXIgPT4ge1xyXG4gICAgICAgICAgICBpZiAoIWZpbHRlciB8fCBmaWx0ZXIoc3ViRGlyKSkge1xyXG4gICAgICAgICAgICAgICAgZGlycy5wdXNoKHRoaXMudG9VbmlTZXBhcmF0b3Ioc3ViRGlyKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gZGlycztcclxuICAgIH1cclxuXHJcbiAgICAvKiog5qC55o2u5paH5Lu26Lev5b6E5om+5Yiw6L+95Yqg5LqGbWQ15YC855qE5a6e6ZmF5paH5Lu26Lev5b6EICovXHJcbiAgICBwdWJsaWMgc3RhdGljIHJlc29sdmVGaWxlUGF0aChmaWxlUGF0aDogc3RyaW5nKSB7XHJcbiAgICAgICAgbGV0IHJlc3VsdCA9IGZpbGVQYXRoO1xyXG4gICAgICAgIGxldCBkaXIgPSBwYXRoLmRpcm5hbWUoZmlsZVBhdGgpO1xyXG4gICAgICAgIGlmIChmcy5leGlzdHNTeW5jKGRpcikpIHtcclxuICAgICAgICAgICAgbGV0IGJhc2VuYW1lID0gcGF0aC5iYXNlbmFtZShmaWxlUGF0aCk7XHJcbiAgICAgICAgICAgIGxldCBleHQgPSBwYXRoLmV4dG5hbWUoZmlsZVBhdGgpO1xyXG4gICAgICAgICAgICBsZXQgbmFtZSA9IGJhc2VuYW1lLnJlcGxhY2UoZXh0LCBcIi5cIik7XHJcbiAgICAgICAgICAgIGxldCByZWcgPSBuZXcgUmVnRXhwKGAke25hbWV9W0EtWmEtejAtOV17NX0ke2V4dH1gKTtcclxuICAgICAgICAgICAgbGV0IGRpcmVudHMgPSBmcy5yZWFkZGlyU3luYyhkaXIsIHsgd2l0aEZpbGVUeXBlczogdHJ1ZSB9KTtcclxuICAgICAgICAgICAgZm9yIChjb25zdCBkaXJlbnQgb2YgZGlyZW50cykge1xyXG4gICAgICAgICAgICAgICAgbGV0IHAgPSBwYXRoLmpvaW4oZGlyLCBkaXJlbnQubmFtZSk7XHJcbiAgICAgICAgICAgICAgICBpZiAoZGlyZW50LmlzRmlsZSgpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRpcmVudC5uYW1lID09IGJhc2VuYW1lKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZWcudGVzdChkaXJlbnQubmFtZSkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdCA9IHA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcmVzdWx0LnJlcGxhY2UoL1xcXFwvZywgXCIvXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiDlsIbov73liqDkuoZtZDXnmoTmlofku7bot6/lvoTov5jljp/kuLrmraPluLjnmoTmlofku7bot6/lvoQgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgcmVzdG9yZUZpbGVQYXRoKGZpbGVQYXRoOiBzdHJpbmcpIHtcclxuICAgICAgICBsZXQgZXh0ID0gcGF0aC5leHRuYW1lKGZpbGVQYXRoKTtcclxuICAgICAgICBsZXQgcCA9IGZpbGVQYXRoLnJlcGxhY2UoZXh0LCBcIlwiKTtcclxuICAgICAgICBsZXQgcmVnID0gbmV3IFJlZ0V4cCgvLitcXC5bQS1aYS16MC05XXs1fS8pO1xyXG4gICAgICAgIGlmIChyZWcudGVzdChwKSkge1xyXG4gICAgICAgICAgICBsZXQgaW5kZXggPSBwLmxhc3RJbmRleE9mKFwiLlwiKVxyXG4gICAgICAgICAgICByZXR1cm4gcC5zdWJzdHJpbmcoMCwgaW5kZXgpICsgZXh0O1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmaWxlUGF0aDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIOWIt+aWsOe8lui+keWZqOWGheeahOi1hOa6kCAqL1xyXG4gICAgcHVibGljIHN0YXRpYyByZWZyZXNoQXNzZXQocGF0aDogc3RyaW5nKSB7XHJcbiAgICAgICAgaWYgKCFwYXRoLnN0YXJ0c1dpdGgoXCJkYjpcIikgJiYgZnMuc3RhdFN5bmMocGF0aCkuaXNEaXJlY3RvcnkoKSkge1xyXG4gICAgICAgICAgICBsZXQgZmlsZXMgPSBVdGlscy5nZXRBbGxGaWxlcyhwYXRoLCBudWxsLCB0cnVlKTtcclxuICAgICAgICAgICAgZm9yIChjb25zdCBmaWxlIG9mIGZpbGVzKSB7XHJcbiAgICAgICAgICAgICAgICBFZGl0b3IuTWVzc2FnZS5zZW5kKFwiYXNzZXQtZGJcIiwgXCJyZWZyZXNoLWFzc2V0XCIsIHRoaXMudG9Bc3NldERCVXJsKGZpbGUpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIEVkaXRvci5NZXNzYWdlLnNlbmQoXCJhc3NldC1kYlwiLCBcInJlZnJlc2gtYXNzZXRcIiwgdGhpcy50b0Fzc2V0REJVcmwocGF0aCkpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKiog5Yig6Zmk57yW6L6R5Zmo5YaF55qE6LWE5rqQICovXHJcbiAgICBwdWJsaWMgc3RhdGljIGRlbGV0ZUFzc2V0KHBhdGg6IHN0cmluZykge1xyXG4gICAgICAgIEVkaXRvci5NZXNzYWdlLnNlbmQoXCJhc3NldC1kYlwiLCBcImRlbGV0ZS1hc3NldFwiLCB0aGlzLnRvQXNzZXREQlVybChwYXRoKSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIOWwhuacrOWcsOaWh+S7tui3r+W+hOi9rOWMluS4uue8lui+keWZqOWGhei1hOa6kOi3r+W+hCAqL1xyXG4gICAgcHVibGljIHN0YXRpYyB0b0Fzc2V0REJVcmwocGF0aDogc3RyaW5nKSB7XHJcbiAgICAgICAgaWYgKHBhdGguc3RhcnRzV2l0aChcImRiOi8vXCIpKSByZXR1cm4gcGF0aDtcclxuICAgICAgICBlbHNlIHJldHVybiBwYXRoLnJlcGxhY2UodGhpcy5Qcm9qZWN0UGF0aCArIFwiL1wiLCBcImRiOi8vXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiDlsIbnvJbovpHlmajlhoXotYTmupDot6/lvoTovazljJbkuLrmnKzlnLDmlofku7bot6/lvoQgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgdG9BYnNvbHV0ZVBhdGgoZGJVcmxPcnByb2pVcmw6IHN0cmluZykge1xyXG4gICAgICAgIGlmIChkYlVybE9ycHJvalVybC5zdGFydHNXaXRoKFwiZGI6Ly9cIikpIHJldHVybiBkYlVybE9ycHJvalVybC5yZXBsYWNlKFwiZGI6Ly9cIiwgdGhpcy5Qcm9qZWN0UGF0aCArIFwiL1wiKTtcclxuICAgICAgICBlbHNlIGlmIChkYlVybE9ycHJvalVybC5zdGFydHNXaXRoKFwicHJvamVjdDovL1wiKSkgcmV0dXJuIGRiVXJsT3Jwcm9qVXJsLnJlcGxhY2UoXCJkYjovL1wiLCB0aGlzLlByb2plY3RQYXRoICsgXCIvXCIpO1xyXG4gICAgICAgIGVsc2UgcmV0dXJuIGRiVXJsT3Jwcm9qVXJsO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiDnu5/kuIDot6/lvoTliIbpmpTnrKbkuLooLykgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgdG9VbmlTZXBhcmF0b3IocGF0aDogc3RyaW5nKSB7XHJcbiAgICAgICAgcmV0dXJuIHBhdGgucmVwbGFjZSgvXFxcXC9nLCBcIi9cIik7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIOe7n+S4gOaNouihjOespuS4uihcXG4pICovXHJcbiAgICBwdWJsaWMgc3RhdGljIHRvVW5pTGluZUJyYWtlKGNvbnRlbnQ6IHN0cmluZykge1xyXG4gICAgICAgIHJldHVybiBjb250ZW50LnJlcGxhY2UoL1xcXFxyXFxcXG4vZywgXCJcXG5cIik7XHJcbiAgICB9XHJcbn0iXX0=